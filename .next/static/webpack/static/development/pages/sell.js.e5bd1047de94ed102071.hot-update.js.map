{"version":3,"file":"static/webpack/static/development/pages/sell.js.e5bd1047de94ed102071.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String    \n    ) {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ){\n            id\n        }\n    }\n`;\n\nclass CreateItem extends Component {\n    state = { \n        title: 'Earring',\n        description: 'Great Earring',\n        image: 'earring.jpg',\n        largeImage: 'largeEarring.jpg',\n        price: 5,\n     };\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value\n        this.setState({\n            [name]: val\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state)\n    }\n\n\n    render() {\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, { loading, error }) => (\n                    <Form onSubmit={this.handleSubmit}> \n                        <Error error={error} />\n                        <fieldset disabled={loading}>\n                            <label htmlFor=\"title\">\n                                Title\n                                <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title\" required value={this.state.title} onChange={this.handleChange}/>\n                            </label>\n                            <label htmlFor=\"price\">\n                                Price\n                                <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"Price\" required value={this.state.price} onChange={this.handleChange}/>\n                            </label>\n                            <label htmlFor=\"description\">\n                                Description\n                                <textarea id=\"description\" name=\"description\" placeholder=\"Enter a description\" required value={this.state.description} onChange={this.handleChange}/>\n                            </label>\n                            <button type=\"submit\">Submit</button>\n                        </fieldset>\n                    </Form>            \n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAsBA;;;;AAhDA;AACA;AAkDA;;;;;A","sourceRoot":""}