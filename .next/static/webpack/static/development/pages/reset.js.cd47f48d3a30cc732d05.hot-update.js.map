{"version":3,"file":"static/webpack/static/development/pages/reset.js.cd47f48d3a30cc732d05.hot-update.js","sources":["webpack:///./components/Reset.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from '../components/User';\nimport { GraphQLEnumType } from 'graphql';\nimport graphql from 'graphql-anywhere';\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n        resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n          id\n          email\n          name\n        }\n    }\n`;\n\n\nclass Reset extends Component {\n    static propTypes = {\n      resetToken: PropTypes.string.isRequired,\n    };\n\n    state = { \n        password: '',\n        confirmPassword: ''\n     }\n\n    saveToState = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Mutation \n              mutation={RESET_MUTATION} \n              variables={{\n                resetToken: this.props.resetToken,\n                password: this.state.password,\n                confirmPassword: this.state.confirmPassword\n              }}\n              refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(reset, {error, loading, called }) => {\n                    return (\n                        <Form method=\"post\" onSubmit={async e => {\n                            e.preventDefault();\n                            await reset();\n                            this.setState({password: '', confirmPassword: ''})\n                        }}>\n                            <fieldset disabled={loading} aria-busy={loading}>\n                                <h2>Request Your Password</h2>\n                                <Error error={error} />\n                                <label htmlFor=\"password\">\n                                    Password\n                                    <input \n                                        type=\"password\" \n                                        name=\"password\" \n                                        placeholder=\"Password\" \n                                        value={this.state.password} \n                                        onChange={this.saveToState}\n                                    />\n                                </label>\n\n                                <label htmlFor=\"confirmPassword\">\n                                    Confirm Your Password\n                                    <input \n                                        type=\"password\" \n                                        name=\"confirmPassword\" \n                                        placeholder=\"Confirm Password\" \n                                        value={this.state.confirmPassword} \n                                        onChange={this.saveToState}\n                                    />\n                                </label>\n                                <button type=\"submit\">Reset Your Password</button>\n                            </fieldset>\n                        </Form>\n                    )\n                }}\n            </Mutation>\n        );\n    }\n}\n\nexport default Reset;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AAjEA;AACA;AADA;AAEA;AADA;AACA;AAkEA;;;;A","sourceRoot":""}